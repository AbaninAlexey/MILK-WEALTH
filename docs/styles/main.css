@charset "UTF-8";@import url(https://fonts.googleapis.com/css2?family=Black+Han+Sans&display=swap);@keyframes running-animation{0%{transform:translateZ(0)}to{transform:translate3d(-100%,0,0)}}*,::after,::before{box-sizing:border-box}:where(ul, ol):where([class]){padding-left:0}:where(blockquote, figure):where([class]),body{margin:0}:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]){margin-block:0}:where(dd[class]){margin-left:0}:where(fieldset[class]){margin-left:0;padding:0;border:0}:where(ul[class]){list-style:none}:where(address[class]){font-style:normal}p{--paragraphMarginBottom:24px;margin-block:0}p:where(:not([class]):not(:last-child)){margin-bottom:var(--paragraphMarginBottom)}img,video{display:block;max-width:100%;height:auto}button,input,select,textarea{font:inherit}html{height:100%;scrollbar-gutter:stable}:has(:target),html{scroll-behavior:smooth}body{min-height:100%;line-height:1.2;font-family:var(--second-family);color:var(--font-color);background-color:var(--white);display:flex;flex-direction:column;font-size:clamp(1.875rem,1.5625rem + .78125vw,2.5rem)}a:where([class]){display:inline-flex}button,label{cursor:pointer}:where([fill]:not([fill=none],
[fill^=url])){fill:currentColor}:where([stroke]:not([stroke=none],
[stroke^=url])){stroke:currentColor}svg *{transition-property:fill,stroke}:where(table){border-collapse:collapse;border-color:currentColor}@media (prefers-reduced-motion:reduce){*,::after,::before{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}@font-face{font-family:"Black Hans Sans";src:url(https://fonts.googleapis.com/css2?family=Black+Han+Sans&display=swap) format("ttf");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"Asap";src:url(../fonts/Asap-Regular.woff2) format("woff2"),url(../fonts/Asap-Regular.woff) format("woff"),url(../fonts/Asap-Regular.ttf) format("ttf");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"Asap";src:url(../fonts/Asap-Medium.woff2) format("woff2"),url(../fonts/Asap-Medium.woff) format("woff"),url(../fonts/Asap-Medium.ttf) format("ttf");font-weight:500;font-style:normal;font-display:swap}@font-face{font-family:"Asap";src:url(../fonts/Asap-ExtraBold.woff2) format("woff2"),url(../fonts/Asap-ExtraBold.woff) format("woff"),url(../fonts/Asap-ExtraBold.ttf) format("ttf");font-weight:800;font-style:normal;font-display:swap}@font-face{font-family:"Asap";src:url(../fonts/Asap-SemiBold.woff2) format("woff2"),url(../fonts/Asap-SemiBold.woff) format("woff"),url(../fonts/Asap-SemiBold.ttf) format("ttf");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:"Platypi";src:url(../fonts/Platypi-Bold.woff2) format("woff2"),url(../fonts/Platypi-Bold.woff2) format("woff"),url(../fonts/Platypi-ExtraBold.ttf) format("ttf");font-weight:700;font-style:normal;font-display:swap}@font-face{font-family:"Platypi";src:url(../fonts/Platypi-ExtraBold.woff2) format("woff2"),url(../fonts/Platypi-ExtraBold.woff) format("woff"),url(../fonts/Platypi-ExtraBold.ttf) format("ttf");font-weight:800;font-style:normal;font-display:swap}@font-face{font-family:"Asap";src:url(../fonts/Asap-SemiBold.woff2) format("woff2"),url(../fonts/Asap-SemiBold.woff) format("woff"),url(../fonts/Asap-SemiBold.ttf) format("ttf");font-weight:400;font-style:normal;font-display:swap}.container{max-width:calc(var(--container-width) + var(--container-padding-x)*2);margin-inline:auto;padding-inline:var(--container-padding-x)}.visually-hidden{position:absolute!important;width:1px!important;height:1px!important;margin:-1px!important;border:0!important;padding:0!important;white-space:nowrap!important;clip-path:inset(100%)!important;clip:rect(0 0 0 0)!important;overflow:hidden!important}.container-padding-block{padding-block:clamp(5rem,3.75rem + 3.125vw,7.5rem) clamp(5rem,3.75rem + 3.125vw,7.5rem)}.overflow-x{overflow-x:hidden}.overflow-y{overflow-y:hidden}.overflow,html.is-lock{overflow:hidden}.h1,h1{font-weight:700;font-size:clamp(5.3125rem,4.53125rem + 1.953125vw,6.875rem)}.h2,h2{font-size:clamp(2.1875rem,1.09375rem + 2.734375vw,4.375rem)}.h3,h3{font-size:clamp(2.1875rem,2.03125rem + .390625vw,2.5rem)}a,button,input,label,select,svg *,textarea{transition-duration:var(--transition-duration)}a{color:inherit}@media (any-hover:hover){a:hover{color:var(--color-accent)}}@media (any-hover:none){a:active{color:var(--color-accent)}}a[class]{text-decoration:none}:focus-visible{outline:.125rem dashed var(--color-light);outline-offset:.25rem;transition-duration:0s!important}a[aria-label],button[aria-label]{position:relative}a[aria-label]::before,button[aria-label]::before{content:"";position:absolute;top:50%;left:50%;translate:-50% -50%;width:2.75rem;height:2.75rem}:root{--bonkey-blue:#8ea4cf;--camel-orange:#fc936f;--bomnine-pink:#fa7598;--cows-green:#81ac98;--main-grey:#323e48;--white:#fff;--light-pink:#f2c4e1;--light-blue:#bdc0d7;--middle-blue:#a3b2ce;--bonvine-pink:#fa7598;--middle-pink:#ee89a8;--middle-orange:#f0a683;--light-orange:#fbbd8e;--light-green:#c3dfd3;--middle-green:#b4e1b7;--middle-green-new:#a1c8b6;--dark:#323e48;--dark-alt:#111315;--font-color:#323E48;--font-color-dark:#1C3039;--color-accent:#FFB303;--color-gray:#F5F5F5;--color-stock:#D9D9D9;--color-play-button:#FEA680;--gradient:linear-gradient(
      45deg,
      var(--color-dark-15) 64%,
      var(--color-accent) 136%
  );--font-family:"Black Han Sans", sans-serif;--second-family:"Asap", sans-serif;--third-family:"Platypi", sans-serif;--font-inter:"Inter", sans-serif;--container-width:107.5rem;--container-padding-x:6.25rem;--transition-duration:0.2s}.header{position:sticky;top:0;z-index:10;width:100%}.header--fixed{position:fixed}.header__body{background-color:var(--font-color);padding-block:2.375rem 2.375rem;transition-duration:.5s}.header__body.in-top-position{background-color:transparent}.header__body-inner{justify-content:space-between;column-gap:1rem}.header__body.is-active{padding-top:5.0625rem}.header__body-inner,.header__logo-wrapper,.header__overlay{display:flex;align-items:center}.header__overlay{column-gap:1.25rem}.header__menu-list{display:flex;align-items:center;justify-content:space-between;column-gap:clamp(.625rem,-1.15625rem + 4.453125vw,4.1875rem)}.header__menu-link{display:flex;font-family:var(--font-family);color:var(--white);font-size:1.25rem;align-self:center;white-space:nowrap;transition-duration:var(--transition-duration)}.header__menu-link.is-active{color:var(--color-accent)}.header__menu-link.in-top-position{color:var(--font-color)}@media (any-hover:hover){.header__menu-link:hover{color:var(--color-accent)}}@media (any-hover:none){.header__menu-link:active{color:var(--color-accent)}}.header__menu__item{display:flex;align-items:center;justify-content:center}.header__stories{display:flex;justify-content:center;background-color:var(--white);position:static;transition-duration:var(--transition-duration)}.header__stories.in-top-position{display:none}.header__stories-wrapper{padding-block:1.25rem}.stories-slider__outer{position:relative;overflow:hidden}.stories-slider__wrapper{width:4.375rem;height:4.375rem}.stories-slider__img{border:.1875rem solid transparent;border-radius:50%;background:linear-gradient(140deg,#ac4ae4,#eb4b4b,#e5ff74) border-box;object-fit:cover;width:100%;height:100%}.stories-slider:has(.swiper-button-prev) .swiper-button-next,.stories-slider:has(.swiper-button-prev) .swiper-button-prev{color:var(--font-color);position:absolute;top:50%;transform:translateY(0);z-index:2}.stories-slider:has(.swiper-button-prev) .swiper-button-next::after,.stories-slider:has(.swiper-button-prev) .swiper-button-prev::after{font-size:.9375rem;font-weight:600}.logo{display:flex;column-gap:.625rem;color:var(--white);transition-duration:var(--transition-duration)}.logo.in-top-position{color:var(--font-color)}.logo__main{max-width:clamp(2.5rem,2.375rem + .3125vw,2.75rem);z-index:3}.logo__main svg{width:100%;height:100%}.logo__text{display:flex;align-items:center;justify-content:center;max-width:5.625rem}.logo__menu-list,.logo__wrapper{display:flex;align-items:start;justify-content:space-between}.logo__menu-list{align-items:center;column-gap:4.75rem}.button{display:flex;font-family:var(--font-family);font-size:clamp(1.125rem,.90625rem + .546875vw,1.5625rem);background-color:var(--white);color:var(--font-color);border-radius:.625rem;text-align:center;justify-content:center}.button--burger-menu{padding-block:.75rem .75rem;width:clamp(12.5rem,10.5625rem + 4.84375vw,16.375rem)}.button--blue,.button.in-top-position{background-color:var(--font-color);color:var(--white)}@media (any-hover:hover){.button--blue:hover,.button.in-top-position:hover{background-color:var(--middle-blue);color:var(--font-color)}}@media (any-hover:none){.button--blue:active,.button.in-top-position:active{background-color:var(--middle-blue);color:var(--font-color)}}.button--yellow{background:var(--color-accent);color:var(--font-color)}@media (any-hover:hover){.button--yellow:hover{background-color:#ffd574}}@media (any-hover:none){.button--yellow:active{background-color:#ffd574}}.button--camel-orange{background:var(--camel-orange);color:var(--font-color)}@media (any-hover:hover){.button--camel-orange:hover{background-color:var(--light-orange);color:var(--font-color)}}@media (any-hover:none){.button--camel-orange:active{background-color:var(--light-orange);color:var(--font-color)}}.button--size-and-family{font-family:var(--second-family);font-size:1.25rem;font-weight:700;padding:.625rem 3rem}.button--pudding{padding-block:1.0625rem}.burger-button{background-color:transparent;border:0;display:inline-flex;flex-direction:column;justify-content:space-between;width:2.1875rem;height:1.5rem;padding:0;z-index:3}.burger-button.in-top-position .burger-button__line{background-color:var(--font-color)}.burger-button__line{width:100%;height:.1875rem;background-color:var(--white)}.burger-button.is-active .burger-button__line{transition-duration:var(--transition-duration)}.burger-button.is-active .burger-button__line:first-child{display:none}.burger-button.is-active .burger-button__line:nth-child(2){rotate:45deg;transform-origin:0;translate:.25em -.12em}.burger-button.is-active .burger-button__line:nth-child(3){rotate:-45deg;transform-origin:0;translate:.25em 0}.burger-button.is-active .burger-button__line:last-child{display:none}.soc1als__list{display:flex;align-items:center;justify-content:space-between;column-gap:2.875rem}.soc1als__list--small{column-gap:2.125rem}.soc1als__link{display:flex;align-items:center;color:var(--white)}.soc1als__link--small{width:1.875rem;height:1.875rem}.stories-popup{position:fixed;display:flex;flex-direction:column;inset:0;background-color:var(--main-grey);z-index:10;color:var(--white);align-items:center;transition-duration:var(--transition-duration)}.stories-popup:not(.is-active){opacity:0;visibility:hidden;translate:100%;transition-duration:var(--transition-duration)}.stories-popup__wrapper{position:absolute;top:.9375rem;flex-direction:column;row-gap:1.25rem;padding-inline:1.25rem;width:100%;z-index:12}.stories-popup__controls,.stories-popup__link,.stories-popup__wrapper{display:flex;justify-content:space-between;align-items:center}.stories-popup__controls{width:100%}.stories-popup__link{column-gap:.9375rem}.stories-popup__text{font-family:var(--font-family);font-weight:400;font-size:1.25rem}.stories-popup__progress-bar{position:relative;max-width:37.5rem;width:100%;height:.3125rem;border-radius:.3125rem}.stories-popup__progress-bar-empty,.stories-popup__progress-bar-fill{position:absolute;max-width:37.5rem;height:.3125rem;border-radius:.3125rem}.stories-popup__progress-bar-fill{background-color:var(--color-accent);z-index:13;width:0}.stories-popup__progress-bar-empty{background-color:var(--white);z-index:12;width:100%}.stories-popup__extra{position:absolute;bottom:6.875rem;padding-inline:5.6875rem;z-index:12}.stories-popup__extra,.stories-popup__extra-link,.stories-popup__footer{display:flex;align-items:center;justify-content:center;width:100%}.stories-popup__extra-link{background-color:var(--main-grey);height:4.0625rem;max-width:28.4375rem;min-width:max-content;border-radius:2.5rem;font-size:1.875rem;padding-inline:1rem}.stories-popup__footer{max-height:5rem;height:100%;position:absolute;bottom:0;background-color:var(--dark-alt);z-index:12}.stories-popup__footer-wrapper{display:flex;column-gap:.625rem;align-items:center;justify-content:center}.stories-popup__number{font-size:1.5625rem}.stories-popup__buttons{position:absolute;display:flex;width:100%;height:100%;top:50%;transform:translateY(-50%);z-index:11}.stories-popup__next,.stories-popup__prev{width:50%;height:100%}.stories-popup__image{object-fit:cover;width:100%;height:100%;opacity:0;transition:1s;z-index:11}.stories-popup__image.is-active{opacity:1}.stories-popup__image.next{opacity:0}.hero{background:linear-gradient(170deg,rgba(255,255,255,.868) 0,transparent 90%),url(../images/hero/bg.jpg) no-repeat center/cover}.hero__body{display:flex;padding-top:23.375rem;padding-left:15.3125rem;justify-content:start;align-items:start;height:67.5rem}.hero__title{display:flex;flex-direction:column;align-items:center;font-size:clamp(5.3125rem,4.125rem + 2.96875vw,7.6875rem)}.hero__title-main{font-family:var(--third-family);font-weight:700}.hero__subtitle{font-family:var(--font-family);font-size:clamp(2.1875rem,1.71875rem + 1.171875vw,3.125rem)}.hero__subtitle:first-child{height:2.5rem}.hero__subtitle:last-child{padding-top:1.875rem}.info{background-color:var(--color-gray)}.info__inner{display:flex;flex-direction:column;align-items:center;justify-content:center;row-gap:3.75rem}.info__inner--about-us{background:url(../images/info/bg.jpg) no-repeat center/cover;height:clamp(61.25rem,35.21875rem + 65.078125vw,113.3125rem)}.info__title{max-width:50.25rem;text-align:center;font-family:var(--font-family);font-weight:400}.info__item,.info__list{display:flex;justify-content:space-between}.info__list{height:10.9375rem;column-gap:3.75rem}.info__item{flex-direction:column;align-items:center}.info__description{text-align:center;font-family:var(--font-family);font-size:1.875rem}.info__extra{position:relative;display:flex;justify-content:center;width:auto;z-index:3}.info__extra-img{max-width:clamp(46.75rem,9.5rem + 93.125vw,121.25rem);max-height:clamp(37.5625rem,13.84375rem + 59.296875vw,85rem)}.info__extra-img--rotate{rotate:180deg}.info__extra-wrapper{position:absolute;z-index:21;top:clamp(8.0625rem,2.96875rem + 12.734375vw,18.25rem);font-weight:400}.info__extra-title{font-weight:400;text-align:center;max-width:67.625rem;font-size:clamp(3.125rem,.9375rem + 5.46875vw,7.5rem)}.info__extra-bold{font-family:var(--third-family)}.cloud__inner{margin-top:-31.25rem}.cloud-slider__bg:nth-child(1){background:url(../images/cloud/1.jpg) no-repeat center/cover}.cloud-slider__bg--two{background:url(../images/cloud/21.jpg) no-repeat center/cover}.cloud-slider__wrapper{display:flex;align-items:end;justify-content:start;width:clamp(68.75rem,42.1875rem + 66.40625vw,121.875rem);height:clamp(47.25rem,25.8125rem + 53.59375vw,90.125rem)}.cloud-slider__wrapper--height{height:clamp(55.9375rem,38.84375rem + 42.734375vw,90.125rem)}.cloud-slider__content{display:flex;flex-direction:column;width:clamp(28.75rem,16.71875rem + 30.078125vw,52.8125rem);row-gap:2.5rem;padding-bottom:clamp(8.75rem,5.46875rem + 8.203125vw,15.3125rem);justify-content:start;align-items:start}.cloud-slider__title{font-family:var(--font-family);font-weight:400;text-align:start}.cloud-slider__description{max-width:clamp(22.4375rem,11.78125rem + 26.640625vw,43.75rem);text-align:start}.cloud-slider__description--width{max-width:clamp(28.75rem,21.25rem + 18.75vw,43.75rem)}.cloud-slider .swiper-pagination{position:absolute;left:0;right:0;display:flex;column-gap:2.125rem;justify-content:center;bottom:7.5rem}.cloud-slider .swiper-pagination--bg-bullet .swiper-pagination-bullet{background-color:#bdbcbc}.cloud-slider .swiper-pagination-bullet{background-color:var(--color-stock);opacity:1;margin:0!important;width:1.5625rem;height:1.5625rem}.cloud-slider .swiper-pagination--bg-bullet .swiper-pagination-bullet-active,.cloud-slider .swiper-pagination-bullet-active{background-color:var(--font-color)}.rating{padding-block:5rem 12.5rem}.rating__inner{display:flex;flex-direction:column;row-gap:2.8125rem}.rating__main{display:flex;align-items:start;justify-content:space-between;width:100%}.rating__body,.rating__header{display:flex;flex-direction:column}.rating__body{row-gap:clamp(1.25rem,.625rem + 1.5625vw,2.5rem)}.rating__header{align-items:center;justify-content:center;row-gap:1.25rem}.rating__title{text-align:center;font-family:var(--font-family);font-size:clamp(1.8125rem,.84375rem + 2.421875vw,3.75rem)}.rating__cow-img{display:flex;margin-top:1.375rem;width:clamp(19.4375rem,12.3125rem + 17.8125vw,33.6875rem)}.rating__cow-body{display:flex;align-items:start;width:auto}.rating__cow-description{position:relative;display:flex;align-items:center;justify-content:center;margin-left:clamp(-2.1875rem,-.59375rem + -3.984375vw,-5.375rem);color:var(--white);width:clamp(13.75rem,11.90625rem + 4.609375vw,17.4375rem);height:clamp(14.6875rem,12.71875rem + 4.921875vw,18.625rem);background:url(../images/rating/blue-cloud.svg) no-repeat center/cover}.rating__cow-description-text{position:absolute;right:clamp(1.0625rem,.90625rem + .390625vw,1.375rem);top:clamp(3.6875rem,3.28125rem + 1.015625vw,4.5rem);font-family:var(--font-family);font-weight:400;font-size:clamp(1.0625rem,.90625rem + .390625vw,1.375rem);line-height:1.5;width:clamp(10.25rem,8.84375rem + 3.515625vw,13.0625rem);height:auto}.rating__number{position:relative;background-color:var(--cows-green);padding:clamp(.9375rem,.25rem + 1.71875vw,2.3125rem) 0 clamp(.625rem,-.53125rem + 2.890625vw,2.9375rem) clamp(2.75rem,-4.90625rem + 19.140625vw,18.0625rem);font-family:var(--font-family);font-size:3.125rem}.rating__number-text{font-size:clamp(1.25rem,.3125rem + 2.34375vw,3.125rem)}.rating__number-one{font-size:clamp(3.125rem,1.5625rem + 3.90625vw,6.25rem);overflow:hidden}.rating__number-img{position:absolute;bottom:-5.1875rem;right:clamp(2.875rem,-2.375rem + 13.125vw,13.375rem);width:clamp(27.0625rem,17rem + 25.15625vw,47.1875rem)}.rating__button,.rating__buttons{display:flex;align-items:center;justify-content:center}.rating__buttons{column-gap:1.875rem;text-align:center}.rating__button{font-size:clamp(1.25rem,1.09375rem + .390625vw,1.5625rem);font-family:var(--second-family);font-weight:800;width:clamp(3.125rem,-8.0625rem + 27.96875vw,25.5rem);height:3.75rem}.details-list{display:flex;position:relative;cursor:pointer;overflow:visible}.details-list[open] .details-list__arrow,.details-list__arrow,.details-list__list{display:flex;justify-content:center;align-items:center}.details-list__arrow::after{content:"";display:block;color:var(--font-color);width:.75rem;height:1.25rem;margin-left:.9375rem;background:url(../images/tabs/arrow-right.svg) no-repeat center/contain}.details-list[open]{background-color:var(--light-orange)}.details-list[open] .details-list__arrow::after{content:"";display:flex;color:var(--font-color);width:1.25rem;height:.9375rem;margin-left:.9375rem;background:url(../images/tabs/arrow-right-active.svg) no-repeat center/contain}.details-list__list{position:absolute;flex-direction:column;row-gap:1.25rem;background-color:var(--white);border-radius:0 0 .625rem .625rem;z-index:4;left:0;right:0;top:3.75rem;padding-block:1.25rem 1.75rem}.details-list__item{text-transform:uppercase;font-size:1.25rem}.details-list__title{position:relative;list-style:none;display:block;width:100%;height:100%}.rating-stars,.rating-stars__stars{display:flex;align-items:center;justify-content:space-between;column-gap:1.25rem}.rating-stars__stars{justify-content:center;column-gap:.25rem}.rating-stars__stars-text--small-mobile{font-size:1.25rem}.family__inner{background:url(../images/family/family.jpg) no-repeat center/cover;display:flex;align-items:end;justify-content:end}.family__inner--product-list{background:url(../images/family/product-list.jpg) no-repeat center/cover}.family__inner--camel{background:url(../images/family/family-camel-page.jpg) no-repeat center/cover}.family__inner--camel-second{background:url(../images/family/family-camel-page-2.jpg) no-repeat center/cover}.family__card{background-color:var(--cows-green);display:flex;align-items:start;justify-content:start;width:50rem;height:60rem;margin-bottom:clamp(7.375rem,7.34375rem + .078125vw,7.4375rem)}.family__card--margin{margin-bottom:clamp(2.3125rem,-.25rem + 6.40625vw,7.4375rem)}.family__card--camel{background-color:var(--camel-orange)}.family__card-body{padding-block:3.75rem 0;display:flex;flex-direction:column;align-items:start;justify-content:start;row-gap:1.25rem;padding-inline:3.625rem 0}.family__description{font-weight:500;max-width:34.5625rem}.family__description p{margin:0}.family__title{font-family:var(--font-family);font-weight:500;width:clamp(16.875rem,5.28125rem + 28.984375vw,40.0625rem)}.stroke{display:flex;flex-direction:column;row-gap:2.5rem;padding-block:7.5rem 8.125rem}.stroke--gap{row-gap:1.25rem}.stroke__inner{display:flex;width:100vw;max-width:400%;margin:0 auto;overflow:hidden}.stroke__item{flex-shrink:0;animation:running-animation 70s linear infinite;white-space:nowrap;font-size:5.625rem}.stroke__item--orange,.stroke__item--pink{font-weight:700;font-family:var(--third-family)}.stroke__item--orange{padding-left:33.125rem;color:var(--camel-orange)}.stroke__item--pink{color:#ff8eb2}.stroke__item--blue{font-weight:500;color:var(--font-color);font-family:var(--font-family)}.video{height:clamp(67.5rem,65.25rem + 5.625vw,72rem)}.video__inner{position:relative;width:100%;height:100%}.video__body{width:100%;height:100%;object-fit:cover}.video__popup{position:fixed;display:flex;align-items:center;justify-content:center;top:0;left:0;z-index:20;width:100%;height:100%;background:rgba(0,0,0,.9)}.video__popup:not(.is-active){display:none}.video__popup-container,.video__popup-wrapper{width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center}.video__popup-container{max-width:60rem;max-height:37.5rem;position:relative}.video__popup-wrapper{padding:1.875rem}.video__popup-close-button{position:absolute!important;top:-.9375rem;right:-.9375rem}.video__popup-body{display:block;object-fit:contain;width:100%;height:auto;max-width:100%;max-height:100%}.video__panel{position:absolute;inset:0}.video__panel svg{position:absolute;top:50%;left:50%;translate:-50% -50%}.video__title{color:var(--white);font-family:var(--font-family);font-weight:500;text-align:center;padding-top:clamp(3.75rem,-3.84375rem + 18.984375vw,18.9375rem);font-size:clamp(3.125rem,2.5rem + 1.5625vw,4.375rem)}.video__play-button{color:var(--color-play-button);border-radius:50%;border:0;padding:0;background-color:var(--font-color);position:absolute;top:50%;left:50%;translate:-50% -50%;display:flex;justify-content:center;align-items:center;width:clamp(5.625rem,4.375rem + 3.125vw,8.125rem);height:clamp(5.625rem,4.375rem + 3.125vw,8.125rem)}.video-alt{height:clamp(67.5rem,65.25rem + 5.625vw,72rem)}.video-alt__inner{position:relative;width:100%;height:100%}.video-alt__body{width:100%;height:100%;object-fit:cover}.video-alt__panel{position:absolute;inset:0;display:flex;flex-direction:column;row-gap:2.8125rem;justify-content:center;align-items:center}.video-alt__panel svg,.video__panel svg{width:clamp(3.25rem,2.5rem + 1.875vw,4.75rem);height:clamp(3.25rem,2.5rem + 1.875vw,4.75rem)}.video-alt__title{color:var(--font-color);font-family:var(--font-family);font-weight:500;text-align:center;font-size:clamp(3.125rem,2.5rem + 1.5625vw,4.375rem)}.video-alt__play-button{color:var(--color-play-button);border-radius:50%;border:0;padding:0;background-color:var(--font-color);display:flex;justify-content:center;align-items:center;width:clamp(5.625rem,4.375rem + 3.125vw,8.125rem);height:clamp(5.625rem,4.375rem + 3.125vw,8.125rem)}.video-alt__description p{text-align:center}.reason{background-color:var(--color-gray)}.reason__inner{display:grid;padding-top:clamp(5rem,3.75rem + 3.125vw,7.5rem);row-gap:clamp(3.375rem,2.5625rem + 2.03125vw,5rem);justify-content:center;align-items:center}.reason__inner--about-us{padding-block:clamp(1.875rem,.9375rem + 2.34375vw,3.75rem)}.reason__title{font-family:var(--third-family);text-align:center;width:max-content;z-index:1}.reason__body{display:grid;align-items:center;justify-content:center;row-gap:6.375rem}.reason__cow-wrapper{position:relative;display:flex;width:64.3125rem;height:36.9375rem;align-items:start;justify-content:start;margin-inline:auto}.reason__cow-image{position:absolute;right:2.3125rem;bottom:-.125rem;width:clamp(29.125rem,26.875rem + 5.625vw,33.625rem);height:clamp(28.6875rem,26.46875rem + 5.546875vw,33.125rem)}.reason__cow-image--camel{right:-6.0625rem;bottom:-.125rem;width:clamp(36.3125rem,34.8125rem + 3.75vw,39.3125rem);height:clamp(29.375rem,26.90625rem + 6.171875vw,34.3125rem)}.reason__cow-description{display:flex;position:relative;background:url(../images/reason/green-cloud.png) no-repeat center/cover;width:37.25rem;height:30.3125rem}.reason__cow-description--camel{background:url(../images/reason/orange-cloud.png) no-repeat center/cover}.reason__cow-cloud{position:absolute;width:27.8125rem;height:14.4375rem;left:4.0625rem;top:5.875rem}.reason__cow-cloud--camel{width:17.875rem;height:8.625rem;top:50%;left:50%;translate:-50% -50%}.reason__header{display:grid;row-gap:.625rem;justify-content:center}.reason__description{display:flex;font-family:var(--font-family);color:var(--cows-green);font-weight:500;max-width:25.5rem;text-align:center;align-items:center;justify-content:center;margin-inline:auto;font-size:clamp(2.1875rem,2.03125rem + .390625vw,2.5rem)}.reason__description--camel{color:var(--camel-orange)}.reason__list{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:21.75rem 18.6875rem 17.9375rem 9.1875rem 20.5625rem;column-gap:1.5625rem;row-gap:3.75rem;z-index:4}.reason__list--about-us{grid-template-rows:29.75rem 29.1875rem 29.75rem 32.75rem 26.75rem;row-gap:2.25rem}.reason__item-img{width:14.875rem;height:39.6875rem;z-index:1}.reason__item-img--green,.reason__item-img--green-about{position:absolute;right:-23.375rem;top:-2rem;translate:100%;rotate:-54deg;z-index:-1}.reason__item-img--orange,.reason__item-img--orange-about{position:absolute;left:-22.8125rem;top:-3rem;translate:-100%;rotate:34deg;z-index:-1}.reason__item-img--red-about{z-index:-1}.reason__item-img--red,.reason__item-img--red-about{position:absolute;left:-10.125rem;top:-8.5rem;translate:-100%;rotate:9.32deg}.reason__item-img--blue,.reason__item-img--blue-about{position:absolute;right:-18.75rem;top:-12.5rem;translate:100%;rotate:-37deg}.reason__item-img--blue{right:-21.8125rem;top:-1.8125rem}.reason__card{display:flex;column-gap:clamp(.625rem,.15625rem + 1.171875vw,1.5625rem);align-items:start;justify-content:start;position:relative}.reason__card-number{margin-top:-1.5rem;font-family:var(--font-family);font-size:clamp(3.125rem,2.5rem + 1.5625vw,4.375rem)}.reason__card-title{font-family:var(--font-family);font-weight:500}.reason__card-body{display:grid;row-gap:1.25rem;z-index:2}.use{background:url(../images/use/bg.jpg) no-repeat center/cover;color:var(--white);padding-block:clamp(5rem,4.09375rem + 2.265625vw,6.8125rem);height:clamp(61.4375rem,58.40625rem + 7.578125vw,67.5rem)}.use__inner{display:grid;row-gap:2.5rem}.use__header{display:flex;column-gap:.8125rem;align-items:center;font-family:var(--font-family);font-weight:500}.use__header-logo{margin-top:-1.5625rem}.use__list{display:grid;grid-template-columns:36.4375rem 34.625rem;grid-template-rows:repeat(3,auto);column-gap:9.125rem;row-gap:clamp(.625rem,.3125rem + .78125vw,1.25rem)}.use__item-title{display:flex;column-gap:1.1875rem;align-items:center;font-family:var(--font-family);font-weight:400;margin-top:2.5rem}.use__item-img{margin-top:-.4375rem}.use__item:nth-child(1){grid-area:1/1/2/2;max-width:36.4375rem}.use__item:nth-child(2){grid-area:2/1/3/2;font-size:1.875rem;max-width:24.8125rem}.use__item:nth-child(3){grid-area:3/1/4/2;display:grid;row-gap:1.25rem}.use__item:nth-child(3) .use__item-text{max-width:30rem}.use__item:nth-child(4){grid-area:1/2/2/3}.camel{padding-block:clamp(.625rem,-1.5625rem + 5.46875vw,5rem) 12.5rem}.camel__inner{display:grid;align-items:center;justify-content:center}.camel__header{row-gap:2.5rem}.camel__header,.camel__header-wrapper{display:flex;align-items:center;justify-content:center;flex-direction:column}.camel__subtitle{color:var(--camel-orange);font-family:var(--font-family);font-weight:500}.camel__subtitle:first-child{height:2.25rem}.camel__subtitle:last-child{margin-top:1.875rem}.camel__title{font-family:var(--third-family);color:var(--font-color-dark);height:clamp(4.875rem,3.875rem + 2.5vw,6.875rem);display:flex;align-items:center}.camel__main{display:flex;align-items:start;justify-content:space-between;width:100%}.camel__main-img{width:clamp(27.125rem,24.625rem + 6.25vw,32.125rem);height:clamp(22.625rem,12.40625rem + 25.546875vw,43.0625rem)}.camel__main-img-alt{margin-left:clamp(1.625rem,-14.75rem + 40.9375vw,34.375rem);margin-top:2.3125rem;width:clamp(30.875rem,24.4375rem + 16.09375vw,43.75rem);height:clamp(23.875rem,18.90625rem + 12.421875vw,33.8125rem)}.camel__main-body{position:relative;width:auto}.camel__main-description{position:absolute;display:flex;align-items:center;justify-content:center;background:url(../images/camel/1.svg) no-repeat center/contain;width:clamp(16rem,10.71875rem + 13.203125vw,26.5625rem);height:clamp(13rem,8.6875rem + 10.78125vw,21.625rem);bottom:4.4375rem;left:clamp(15.8125rem,-.53125rem + 40.859375vw,48.5rem);transform:translateX(0)}.camel__main-description-text{text-align:center;width:clamp(9.875rem,5.09375rem + 11.953125vw,19.4375rem);height:clamp(5.25rem,2.625rem + 6.5625vw,10.5rem);font-family:var(--font-family);font-weight:500;color:var(--font-color-dark);font-size:clamp(2.1875rem,1.40625rem + 1.953125vw,3.75rem)}.camel__main-description-two{position:absolute;display:flex;align-items:center;justify-content:center;background:url(../images/camel/2.svg) no-repeat center/contain;width:clamp(11.625rem,6.03125rem + 13.984375vw,22.8125rem);height:clamp(9.4375rem,4.9375rem + 11.25vw,18.4375rem);top:clamp(23.75rem,21.5625rem + 5.46875vw,28.125rem);left:clamp(19.25rem,-6.21875rem + 63.671875vw,70.1875rem);transform:translateX(0);z-index:2}.camel__main-description-two-text{text-align:center;width:clamp(7.875rem,3.9375rem + 9.84375vw,15.75rem);height:clamp(3rem,1.78125rem + 3.046875vw,5.4375rem);font-family:var(--font-family);font-weight:500;color:var(--white);font-size:clamp(1.25rem,.625rem + 1.5625vw,2.5rem)}.camel__strip{margin-top:.6875rem;position:relative;background-color:var(--camel-orange);min-width:100vw;display:flex;align-items:center;justify-content:end;height:clamp(6.4375rem,3.875rem + 6.40625vw,11.5625rem)}.camel__strip-text{font-family:var(--font-family);display:flex;align-items:start;text-align:center;padding-right:clamp(4.8125rem,-.53125rem + 13.359375vw,15.5rem);font-size:clamp(1.25rem,.625rem + 1.5625vw,2.5rem)}.camel__strip-img{position:absolute;left:clamp(.6875rem,-8.21875rem + 22.265625vw,18.5rem);bottom:clamp(17.875rem,10.40625rem + 18.671875vw,32.8125rem);translate:0 100%;width:clamp(28rem,17.6875rem + 25.78125vw,48.625rem);height:clamp(25rem,16.53125rem + 21.171875vw,41.9375rem)}.camel__button,.camel__buttons{display:flex;align-items:center;justify-content:center}.camel__button{width:16.375rem;font-weight:700;font-family:var(--secont-family);z-index:3}.reviews{padding-block:clamp(5rem,3.75rem + 3.125vw,7.5rem) clamp(6.6875rem,5.34375rem + 3.359375vw,9.375rem);background-color:var(--color-gray)}.reviews__inner,.reviews__title{display:flex;justify-content:center}.reviews__inner{flex-direction:column;row-gap:clamp(3.75rem,3.28125rem + 1.171875vw,4.6875rem)}.reviews__title{align-items:center;text-align:center;font-family:var(--font-family);font-weight:500}.card{display:flex;background-color:var(--white);height:clamp(24.6875rem,19.9375rem + 11.875vw,34.1875rem);width:clamp(19.4375rem,11.875rem + 18.90625vw,34.5625rem)}.card__inner{display:flex;flex-direction:column;align-items:start;justify-content:space-between;padding:clamp(3.375rem,3.1875rem + .46875vw,3.75rem) clamp(1.75rem,1.25rem + 1.25vw,2.75rem) 3.5rem;row-gap:1.75rem;height:auto}.card__stars{display:flex;justify-content:start;font-size:1.875rem;row-gap:.75rem}.card__body{display:grid;row-gap:clamp(1rem,.25rem + 1.875vw,2.5rem)}.card__cite{font-family:var(--font-family);font-weight:500;font-style:normal}.card__time{font-size:clamp(1.25rem,.9375rem + .78125vw,1.875rem)}.footer{background-color:var(--font-color);color:var(--white)}.footer__inner{display:flex;flex-direction:column;align-items:center;justify-content:space-between;padding-block:clamp(2.3125rem,1.1875rem + 2.8125vw,4.5625rem) clamp(2.5rem,1.4375rem + 2.65625vw,4.625rem);row-gap:clamp(1.75rem,1.375rem + .9375vw,2.5rem)}.footer__body,.footer__wrapper{display:flex;align-items:start;justify-content:space-between;width:100%}.footer__body{align-items:center;font-size:clamp(1.125rem,1.0625rem + .15625vw,1.25rem)}.footer__menu{font-size:1.25rem;font-family:var(--font-family);font-weight:500}.footer__menu-link{font-weight:400}.footer__menu-list{display:flex;align-items:center;justify-content:space-between;column-gap:4.75rem}.footer__soc1als{display:flex;column-gap:2.0625rem;width:100%;justify-content:end}.footer__text{max-width:5.625rem}.footer__copyright{width:clamp(4.4375rem,1.78125rem + 6.640625vw,9.75rem)}.hero-alt{height:clamp(60rem,56.09375rem + 9.765625vw,67.8125rem);background:url(../images/hero-alt/bg.jpg) no-repeat center/cover}.hero-alt--camel{background:url(../images/hero-alt/bg-camel-page.jpg) no-repeat center/cover}.hero-alt__body{display:flex;justify-content:end;color:var(--white);flex-direction:column}.hero-alt__body-wrapper{padding-top:9.5625rem;margin-left:auto}.hero-alt__title{display:flex;flex-direction:column;align-items:center}.hero-alt__title-main{font-family:var(--third-family);font-weight:700}.hero-alt__subtitle{font-family:var(--font-family);font-weight:500;text-align:center}.hero-alt__subtitle:last-child{padding-top:2.1875rem}.pure{padding-block:clamp(4.875rem,3.5625rem + 3.28125vw,7.5rem) clamp(4.8125rem,4.78125rem + .078125vw,4.875rem)}.pure__inner{display:flex;align-items:center;justify-content:space-between;column-gap:2.4375rem}.pure__slider-main-wrapper{width:clamp(35.25rem,26.46875rem + 21.953125vw,52.8125rem);height:clamp(38.3125rem,29.25rem + 22.65625vw,56.4375rem);position:relative}.pure__slider-main-wrapper--camel{width:clamp(30.0625rem,22.46875rem + 18.984375vw,45.25rem);height:clamp(37.4375rem,27.5rem + 24.84375vw,57.3125rem)}.pure__slider-child-wrapper{width:clamp(27.5625rem,16.09375rem + 28.671875vw,50.5rem);height:clamp(7.5rem,4.09375rem + 8.515625vw,14.3125rem)}.pure__body{display:flex;width:100%;flex-direction:column;row-gap:5rem}.pure__body-wrapper{row-gap:2.5rem}.pure__body-wrapper,.pure__title{display:flex;flex-direction:column;align-items:center;justify-content:center}.pure__title-subtitle{font-family:var(--font-family);color:var(--cows-green);font-weight:500}.pure__title-subtitle--camel{color:var(--camel-orange)}.pure__title-subtitle:last-child{margin-top:2.1875rem}.pure__title-main{color:var(--font-color);font-family:var(--third-family)}.pure-slider,.pure-slider__content,.pure-slider__image{width:100%;height:100%}.pure-slider__image{object-fit:contain}.custom-next,.custom-prev{width:clamp(1.0625rem,.71875rem + .859375vw,1.75rem);height:clamp(2.3125rem,1.90625rem + 1.015625vw,3.125rem);position:absolute;top:50%;z-index:6}.custom-prev{left:0;background:url(../images/pure/left.svg) no-repeat center/cover;left:-2.8125rem}.custom-next{right:-2.8125rem;background:url(../images/pure/right.svg) no-repeat center/cover}.pure-slider-mini{width:100%;height:100%}.pure-slider-mini__content{max-width:100%}.pure-slider-mini__image{height:100%;width:100%;object-fit:cover}.pure-slider-mini__content{height:100%;width:100%}.swiper-mini{width:100%;height:auto}.tabs{display:flex;flex-direction:column;row-gap:3.75rem}.tabs__header{display:flex;justify-content:center;width:100%;align-items:center}.tabs__header--padding{padding-top:clamp(5rem,3.75rem + 3.125vw,7.5rem)}.tabs__buttons{display:grid;grid-template-columns:repeat(4,1fr);column-gap:1.875rem;justify-content:center;width:100%}.tabs__button{padding-block:clamp(1.0625rem,1.0625rem + 0vw,1.0625rem);padding-inline:1.25rem;color:var(--white);background-color:var(--cows-green);border-radius:.625rem;font-size:1.25rem;font-weight:700;border:0;width:100%;height:100%}.tabs__button--camel{background-color:var(--camel-orange)}.tabs__button-wrapper{display:flex;flex-direction:column;align-items:center;justify-content:center;row-gap:2.5rem;width:100%;max-width:100vw}.tabs__button-text{text-transform:uppercase;display:flex;align-items:center;justify-content:space-between}.tabs__button-text::after{content:"";display:block;width:.75rem;height:1.25rem;margin-left:.9375rem;background:url(../images/tabs/arrow-right-white.svg) no-repeat center/cover}.tabs__button.is-active{background-color:var(--light-green);color:var(--font-color);transition-duration:.1s}.tabs__button.is-active .tabs__button-text::after{content:"";display:block;width:1.25rem;height:.75rem;margin-left:.9375rem;background:url(../images/tabs/arrow-right-active.svg) no-repeat center/cover}.tabs__button--camel.is-active{background-color:var(--light-orange)}.tabs__button--about-us.is-active{background-color:var(--font-color);color:var(--white)}.tabs__button--about-us .tabs__button-text::after{content:"";display:block;width:1.25rem;height:.75rem;margin-left:.9375rem;background:url(../images/tabs/arrow-down-white.svg) no-repeat center/cover!important}@media (any-hover:hover){.tabs__button:hover{color:var(--color-accent)}}@media (any-hover:none){.tabs__button:active{color:var(--color-accent)}}.tabs__body,.tabs__content{width:100%}.tabs__content:not(.is-active){display:none}.tabs__content:focus-visible{outline-offset:-1rem}.tabs__first-list{display:grid;flex-direction:column;row-gap:1.25rem;column-gap:1.875rem;grid-template-columns:repeat(3,1fr)}.tabs__first-list--about{grid-template-columns:repeat(4,1fr);grid-template-rows:auto}.tabs__first-term{color:var(--cows-green)}.tabs__first-item{display:flex;column-gap:.9375rem;font-family:var(--font-family);font-weight:500;font-size:1.5625rem}.tabs__first-plus{width:1.125rem;height:1.125rem;padding-top:.3125rem}.tabs__third-bold{font-family:var(--font-family)}.tabs__third-inner{display:flex;justify-content:center;align-items:start;column-gap:1.875rem}.tabs__third-list{display:flex;flex-direction:column;justify-content:start;row-gap:clamp(1.25rem,.625rem + 1.5625vw,2.5rem);font-size:clamp(1.5625rem,1.09375rem + 1.171875vw,2.5rem)}.tabs__fourth-item,.tabs__fourth-list{justify-content:space-between;align-items:start}.tabs__fourth-list{display:grid;grid-template-columns:repeat(3,1fr);gap:1.875rem}.tabs__fourth-item{display:flex;column-gap:1.25rem;row-gap:1.25rem;font-size:clamp(1.875rem,1.5625rem + .78125vw,2.5rem);font-weight:500}.tabs__fourth-item:first-child{display:grid;align-items:start;justify-content:start;grid-template-areas:"image text" ".  small-text"}.tabs__fourth-item:first-child .tabs__fourth-image{grid-area:image}.tabs__fourth-item:first-child .tabs__fourth-text{grid-area:text}.tabs__fourth-item:first-child .tabs__fourth-small-text{grid-area:small-text;font-size:1.875rem}.tabs__fourth-image{max-height:clamp(3.6875rem,2.875rem + 2.03125vw,5.3125rem)}.tabs__fourth-image:first-child{max-width:clamp(2.3125rem,1.8125rem + 1.25vw,3.3125rem)}.tabs__fourth-image:nth-child(2){max-width:clamp(1.25rem,1rem + .625vw,1.75rem)}.tabs__second-inner{display:flex;flex-direction:column;row-gap:8.4375rem}.tabs__second-body{position:relative;display:flex;flex-direction:column}.tabs__second-body-img{position:absolute;top:clamp(25.5625rem,22.4375rem + 7.8125vw,31.8125rem);left:clamp(-2.0625rem,-20.59375rem + 46.328125vw,35rem);order:-1;height:clamp(63rem,58.6875rem + 10.78125vw,71.625rem);max-width:clamp(32.9375rem,30.71875rem + 5.546875vw,37.375rem)}.tabs__second-list{display:flex;align-items:start;justify-content:start;column-gap:1.5625rem}.tabs__second-item{display:flex;flex-direction:column;row-gap:1.25rem}.tabs__second-row{display:flex;justify-content:space-between;align-items:center;order:1}.tabs__second-row:first-child{margin-bottom:clamp(3.8125rem,3.6875rem + .3125vw,4.0625rem);position:relative;justify-content:center}.tabs__second-row:first-child .tabs__second-elem:first-child{position:absolute;top:14.6875rem;left:clamp(-1.6875rem,-14.09375rem + 31.015625vw,23.125rem)}.tabs__second-row:first-child .tabs__second-elem:first-child .tabs__second-image{position:relative;width:clamp(9.75rem,7.15625rem + 6.484375vw,14.9375rem);height:clamp(3.3125rem,2.4375rem + 2.1875vw,5.0625rem)}.tabs__second-row:first-child .tabs__second-elem:first-child .tabs__second-title{width:clamp(9.375rem,5.5625rem + 9.53125vw,17rem);position:relative}.tabs__second-row:first-child .tabs__second-elem:first-child .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(9.3125rem,3.21875rem + 15.234375vw,21.5rem);height:.0625rem;rotate:53deg;left:clamp(6.875rem,5.625rem + 3.125vw,9.375rem);top:clamp(7.5rem,5.71875rem + 4.453125vw,11.0625rem)}.tabs__second-row:first-child .tabs__second-elem:nth-child(2) .tabs__second-image{width:clamp(11.875rem,10.34375rem + 3.828125vw,14.9375rem);height:clamp(23.5rem,20.5625rem + 7.34375vw,29.375rem)}.tabs__second-row:first-child .tabs__second-elem:nth-child(3){position:absolute;top:clamp(11.1875rem,11.34375rem + -.390625vw,10.875rem);right:clamp(-1.8125rem,-13.46875rem + 29.140625vw,21.5rem)}.tabs__second-row:first-child .tabs__second-elem:nth-child(3) .tabs__second-image{width:clamp(6.25rem,4.5625rem + 4.21875vw,9.625rem);height:clamp(6.125rem,4.46875rem + 4.140625vw,9.4375rem)}.tabs__second-row:first-child .tabs__second-elem:nth-child(3) .tabs__second-title{width:clamp(11.4375rem,8.65625rem + 6.953125vw,17rem);position:relative}.tabs__second-row:first-child .tabs__second-elem:nth-child(3) .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(7.375rem,.3125rem + 17.65625vw,21.5rem);height:.0625rem;rotate:130deg;right:clamp(8.125rem,6.875rem + 3.125vw,10.625rem);top:clamp(8.125rem,7.1875rem + 2.34375vw,10rem)}.tabs__second-row:nth-child(2){margin-bottom:clamp(2.25rem,-2.5rem + 11.875vw,11.75rem);justify-content:space-between;position:relative;height:clamp(10rem,8.125rem + 4.6875vw,13.75rem)}.tabs__second-row:nth-child(2) .tabs__second-elem:first-child{position:absolute;top:.375rem;left:clamp(-2.1875rem,-12.15625rem + 24.921875vw,17.75rem)}.tabs__second-row:nth-child(2) .tabs__second-elem:first-child .tabs__second-title{width:clamp(11.25rem,8.375rem + 7.1875vw,17rem);position:relative}.tabs__second-row:nth-child(2) .tabs__second-elem:first-child .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(7.25rem,3.09375rem + 10.390625vw,15.5625rem);height:.0625rem;rotate:20deg;left:clamp(4.375rem,.9375rem + 8.59375vw,11.25rem);top:clamp(7.5rem,9.0625rem + -3.90625vw,4.375rem)}.tabs__second-row:nth-child(2) .tabs__second-elem:first-child .tabs__second-image{width:clamp(5.6875rem,2.71875rem + 7.421875vw,11.625rem);height:clamp(5.125rem,2.40625rem + 6.796875vw,10.5625rem)}.tabs__second-row:nth-child(2) .tabs__second-elem:nth-child(2){position:absolute;top:0;right:clamp(-1.4375rem,-10.0625rem + 21.5625vw,15.8125rem)}.tabs__second-row:nth-child(2) .tabs__second-elem:nth-child(2) .tabs__second-title{width:clamp(10.625rem,7.4375rem + 7.96875vw,17rem)}.tabs__second-row:nth-child(2) .tabs__second-elem:nth-child(2) .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(7.375rem,3.25rem + 10.3125vw,15.625rem);height:.0625rem;rotate:150deg;right:clamp(4.375rem,1.25rem + 7.8125vw,10.625rem);top:clamp(12.5rem,9.375rem + 7.8125vw,18.75rem)}.tabs__second-row:nth-child(2) .tabs__second-elem:nth-child(2) .tabs__second-image{width:clamp(6.4375rem,3.59375rem + 7.109375vw,12.125rem);height:clamp(5.5rem,3.03125rem + 6.171875vw,10.4375rem)}.tabs__second-row:nth-child(3){margin-bottom:7.5rem;justify-content:space-between;position:relative;height:clamp(10.375rem,7.5625rem + 7.03125vw,16rem)}.tabs__second-row:nth-child(3) .tabs__second-elem:first-child{position:absolute;top:0;left:clamp(-3.625rem,-11.21875rem + 18.984375vw,11.5625rem)}.tabs__second-row:nth-child(3) .tabs__second-elem:first-child .tabs__second-title{width:clamp(10.5rem,7.25rem + 8.125vw,17rem)}.tabs__second-row:nth-child(3) .tabs__second-elem:first-child .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(5rem,-.28125rem + 13.203125vw,15.5625rem);height:.0625rem;rotate:-10deg;left:clamp(4.375rem,.9375rem + 8.59375vw,11.25rem);top:clamp(7.5rem,4.0625rem + 8.59375vw,14.375rem)}.tabs__second-row:nth-child(3) .tabs__second-elem:first-child .tabs__second-image{width:clamp(4rem,2.1875rem + 4.53125vw,7.625rem);height:clamp(5.875rem,3.3125rem + 6.40625vw,11rem)}.tabs__second-row:nth-child(3) .tabs__second-elem:nth-child(2){position:absolute;top:0;right:clamp(-3.625rem,-11.96875rem + 20.859375vw,13.0625rem)}.tabs__second-row:nth-child(3) .tabs__second-elem:nth-child(2) .tabs__second-title{width:clamp(10.5rem,7.25rem + 8.125vw,17rem)}.tabs__second-row:nth-child(3) .tabs__second-elem:nth-child(2) .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(7.375rem,3.25rem + 10.3125vw,15.625rem);height:.0625rem;rotate:170deg;right:clamp(1.875rem,-2.5rem + 10.9375vw,10.625rem);top:clamp(12.5rem,9.375rem + 7.8125vw,18.75rem)}.tabs__second-row:nth-child(3) .tabs__second-elem:nth-child(2) .tabs__second-image{width:clamp(2.375rem,1.34375rem + 2.578125vw,4.4375rem);height:clamp(5.9375rem,3.28125rem + 6.640625vw,11.25rem)}.tabs__second-row:nth-child(4){margin-bottom:clamp(-.3125rem,-3.28125rem + 7.421875vw,5.625rem);justify-content:space-between;position:relative;height:clamp(10.375rem,7.5625rem + 7.03125vw,16rem)}.tabs__second-row:nth-child(4) .tabs__second-elem:first-child{position:absolute;top:0;left:clamp(-3rem,-12.625rem + 24.0625vw,16.25rem)}.tabs__second-row:nth-child(4) .tabs__second-elem:first-child .tabs__second-title{width:clamp(9.375rem,5.5625rem + 9.53125vw,17rem)}.tabs__second-row:nth-child(4) .tabs__second-elem:first-child .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(7.375rem,3.25rem + 10.3125vw,15.625rem);height:.0625rem;rotate:-10deg;left:clamp(1.875rem,-2.5rem + 10.9375vw,10.625rem);top:clamp(7.5rem,5rem + 6.25vw,12.5rem)}.tabs__second-row:nth-child(4) .tabs__second-elem:first-child .tabs__second-image{width:clamp(5.8125rem,2.90625rem + 7.265625vw,11.625rem);height:clamp(5.25rem,2.59375rem + 6.640625vw,10.5625rem)}.tabs__second-row:nth-child(4) .tabs__second-elem:nth-child(2){position:absolute;top:clamp(1.3125rem,.09375rem + 3.046875vw,3.75rem);right:clamp(-3.625rem,-11.96875rem + 20.859375vw,13.0625rem)}.tabs__second-row:nth-child(4) .tabs__second-elem:nth-child(2) .tabs__second-title{width:clamp(9.375rem,5.5625rem + 9.53125vw,17rem)}.tabs__second-row:nth-child(4) .tabs__second-elem:nth-child(2) .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(7.375rem,6.0625rem + 3.28125vw,10rem);height:.0625rem;rotate:10deg;right:clamp(1.875rem,-5.3125rem + 17.96875vw,16.25rem);top:clamp(3.75rem,3.4375rem + .78125vw,4.375rem)}.tabs__second-row:nth-child(4) .tabs__second-elem:nth-child(2) .tabs__second-image{width:clamp(6.6875rem,2.5625rem + 10.3125vw,14.9375rem);height:clamp(3.125rem,1.21875rem + 4.765625vw,6.9375rem)}.tabs__second-row:nth-child(5){margin-bottom:clamp(-.3125rem,-3.28125rem + 7.421875vw,5.625rem);justify-content:space-between;position:relative;height:clamp(11rem,9.5625rem + 3.59375vw,13.875rem)}.tabs__second-row:nth-child(5) .tabs__second-elem:first-child{position:absolute;top:0;left:clamp(0rem,-10.21875rem + 25.546875vw,20.4375rem)}.tabs__second-row:nth-child(5) .tabs__second-elem:first-child .tabs__second-title{width:clamp(13.75rem,10.5rem + 8.125vw,20.25rem)}.tabs__second-row:nth-child(5) .tabs__second-elem:first-child .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(7.375rem,3.25rem + 10.3125vw,15.625rem);height:.0625rem;rotate:130deg;left:clamp(10.625rem,9.0625rem + 3.90625vw,13.75rem);top:1.25rem}.tabs__second-row:nth-child(5) .tabs__second-elem:first-child .tabs__second-image{width:clamp(6rem,3.46875rem + 6.328125vw,11.0625rem);height:clamp(6rem,3.46875rem + 6.328125vw,11.0625rem)}.tabs__second-row:nth-child(5) .tabs__second-elem:nth-child(2){position:absolute;top:0;right:clamp(0rem,-9.21875rem + 23.046875vw,18.4375rem)}.tabs__second-row:nth-child(5) .tabs__second-elem:nth-child(2) .tabs__second-title{width:clamp(13.875rem,10.6875rem + 7.96875vw,20.25rem)}.tabs__second-row:nth-child(5) .tabs__second-elem:nth-child(2) .tabs__second-title::after{content:"";position:absolute;background-color:#000;width:clamp(7.375rem,4.8125rem + 6.40625vw,12.5rem);height:.0625rem;rotate:30deg;right:clamp(10.625rem,8.4375rem + 5.46875vw,15rem);top:1.25rem}.tabs__second-row:nth-child(5) .tabs__second-elem:nth-child(2) .tabs__second-image{width:clamp(7.9375rem,5.1875rem + 6.875vw,13.4375rem);height:clamp(6.5625rem,4.3125rem + 5.625vw,11.0625rem)}.tabs__second-elem{display:flex;flex-direction:column;justify-content:center;align-items:center;row-gap:.9375rem}.tabs__second-title{text-align:center;font-size:clamp(1.4375rem,1.375rem + .15625vw,1.5625rem);font-family:var(--font-family)}.info-alt{background-color:var(--color-gray)}.info-alt__inner{display:flex;flex-direction:column;align-items:center;justify-content:center}.info-alt__title{max-width:50.25rem;text-align:center;font-family:var(--font-family);font-weight:400}.info-alt__item,.info-alt__list{display:flex;justify-content:space-between}.info-alt__list{align-content:justify-content;height:10.9375rem;column-gap:3.75rem}.info-alt__item{flex-direction:column;align-items:center}.info-alt__description{text-align:center;font-family:var(--font-family);font-size:1.875rem}.info-alt__extra{position:relative;display:flex;justify-content:center;width:auto;z-index:5}.info-alt__extra-title{width:clamp(16.5625rem,5.65625rem + 27.265625vw,38.375rem);height:auto}.info-alt__extra-img{min-width:clamp(40.875rem,.65625rem + 100.546875vw,121.3125rem);height:clamp(33.25rem,7.375rem + 64.6875vw,85rem)}.info-alt__extra-img--rotate{rotate:180deg}.info-alt__extra-wrapper{position:absolute;z-index:21;top:clamp(5.875rem,-.15625rem + 15.078125vw,17.9375rem);font-weight:400}.info-alt__extra-title{font-weight:400;text-align:center;max-width:67.625rem;font-size:clamp(3.125rem,.9375rem + 5.46875vw,7.5rem)}.info-alt__extra-bold{font-family:var(--third-family)}.technology{display:flex;align-items:end;justify-content:center;background-color:var(--cows-green);height:clamp(44.5625rem,12.34375rem + 80.546875vw,109rem);padding-block:clamp(3.75rem,1.25rem + 6.25vw,8.75rem);z-index:1;margin-top:-36rem}.technology--camel{background-color:var(--camel-orange)}.technology__inner{display:flex;flex-direction:column;align-items:center;justify-content:center;row-gap:clamp(1.25rem,.625rem + 1.5625vw,2.5rem);max-width:clamp(28.75rem,5.78125rem + 57.421875vw,74.6875rem);width:100%}.technology__text{text-align:center;max-width:clamp(28.75rem,16.6875rem + 30.15625vw,52.875rem);width:100%;font-size:clamp(1.4375rem,.90625rem + 1.328125vw,2.5rem)}.technology__text-main{font-family:var(--font-family);text-align:center;font-size:clamp(1.5625rem,.15625rem + 3.515625vw,4.375rem)}.extra{padding-top:2.5rem;color:var(--white)}.extra--dark{color:var(--dark);opacity:.6;padding-block:1.875rem 1.25rem}.extra__list{display:flex;column-gap:.3125rem;font-size:1.25rem}.extra__item:not(:last-child)::after{content:" / "}.extra__link{text-decoration:none}.extra--top-padding{padding-block:0;padding-top:2.5rem}.radio{display:flex}.radio__label{font-size:1.25rem;color:var(--white);display:table}.radio__input{appearance:none;margin:0;min-width:1.4375rem;height:1.4375rem;background-color:var(--white);border-radius:.3125rem;cursor:pointer}.radio__input:checked{background-color:var(--white);background-image:url(../images/contacts/checked.svg);background-position:center;background-repeat:no-repeat}.radios__item{display:flex;column-gap:.625rem;align-items:start}.field__input{width:100%;border-radius:.625rem;border:0;margin-inline:auto;padding:0;font-size:1.25rem;height:3.125rem;padding:1rem}.field__input::placeholder{font-size:1.25rem;font-weight:500;margin-inline:auto;text-align:center;line-height:1;color:var(--font-color);opacity:.6}.field__input--text-area{height:8.125rem;resize:none;width:100%}.field__input--text-area::placeholder{line-height:5.625rem}.stories-nav{position:relative}.stories-nav .swiper-button-next,.stories-nav .swiper-button-prev{position:absolute;color:var(--font-color);font-size:.9375rem}.stories-nav .swiper-button-next{right:-.9375rem;transform:translateX(50%)}.stories-nav .swiper-button-prev{left:-.9375rem;transform:translateX(-50%)}.stories-nav .swiper-button-next::after,.stories-nav .swiper-button-prev::after{font-size:.9375rem;font-weight:900}.contacts__inner{display:flex;justify-content:space-between;align-items:center}.contacts__title{font-family:var(--font-family);font-weight:500}.contacts__body{display:flex;flex-direction:column;row-gap:clamp(1.25rem,.625rem + 1.5625vw,2.5rem)}.contacts__address{max-width:43.625rem;letter-spacing:0;line-height:1.2}.contacts__address-link{text-decoration:none}.contacts__wrapper{width:clamp(46.125rem,44.96875rem + 2.890625vw,48.4375rem);height:40.25rem;display:flex;justify-content:center;background:url(../images/contacts/blue-cloud.svg) no-repeat center/contain;margin-right:6.25rem}.contacts__form{display:flex;flex-direction:column;align-items:center;justify-content:center;row-gap:1.25rem;padding-block:clamp(3.75rem,3.53125rem + .546875vw,4.1875rem) 5.4375rem;padding-inline:clamp(8.6875rem,7.53125rem + 2.890625vw,11rem) clamp(8.6875rem,8.03125rem + 1.640625vw,10rem)}.contacts__form-title{font-family:var(--font-family);color:var(--white);font-weight:500}.contacts__main{display:flex;flex-direction:column;align-items:center;justify-content:center;row-gap:1.25rem;width:100%}.contacts__field{width:100%}.contacts__button{width:100%;border:0;padding-block:.9375rem .625rem;font-size:1.25rem;font-weight:500}.reviews-slider .swiper-slide,.reviews-slider__slide{width:auto!important}.about-us-hero{background-color:var(--color-gray)}.about-us-hero__inner{display:flex;flex-direction:column;align-items:start;justify-content:start;background:url(../images/about-us-hero/bg.jpg) no-repeat center/cover;height:clamp(57.375rem,33.15625rem + 60.546875vw,105.8125rem)}.about-us-hero__inner-wrapper{display:flex;justify-content:end;margin-left:auto;padding-top:clamp(4.5rem,-.28125rem + 11.953125vw,14.0625rem)}.about-us-hero__title{max-width:50.25rem;text-align:center;font-family:var(--font-family);font-weight:400;display:flex;flex-direction:column;justify-content:center;align-items:center}.about-us-hero__title-main{font-size:clamp(5.3125rem,4.53125rem + 1.953125vw,6.875rem);font-family:var(--third-family)}.about-us-hero__list{display:flex;justify-content:space-between;height:10.9375rem;column-gap:3.75rem}.about-us-hero__item{display:flex;flex-direction:column;justify-content:space-between;align-items:center}.about-us-hero__description{text-align:center;font-family:var(--font-family);font-size:1.875rem}.about-us-hero__extra{position:relative;display:flex;justify-content:center;width:auto;z-index:3;margin-top:-48.75rem}.about-us-hero__extra-img{max-width:clamp(46.75rem,9.5rem + 93.125vw,121.25rem);max-height:clamp(37.5625rem,13.84375rem + 59.296875vw,85rem);object-fit:cover}.about-us-hero__extra-img--rotate{rotate:180deg}.about-us-hero__extra-wrapper{position:absolute;z-index:21;top:clamp(8.125rem,3.15625rem + 12.421875vw,18.0625rem);font-weight:400}.about-us-hero__extra-title{font-weight:400;text-align:center;width:clamp(28.8125rem,9.40625rem + 48.515625vw,67.625rem);font-size:clamp(3.125rem,.9375rem + 5.46875vw,7.5rem)}.about-us-hero__extra-bold{font-family:var(--third-family)}.about-history{padding-bottom:clamp(1.875rem,0rem + 4.6875vw,5.625rem);height:100%;display:flex;justify-content:center}.about-history-slider,.about-history__cloud{padding-block:clamp(1.875rem,.9375rem + 2.34375vw,3.75rem)}.about-history-slider{height:100%;display:flex;justify-content:center}.about-history__cloud{width:auto;height:auto}.about-history__cloud-wrapper{width:clamp(41.875rem,2.1875rem + 99.21875vw,121.25rem);height:clamp(34.0625rem,9.75rem + 60.78125vw,82.6875rem);display:flex;align-items:center;justify-content:center;background:url(../images/about-us/blue-cloud.svg) no-repeat left/contain}.about-history__cloud-text{width:clamp(28.75rem,7.625rem + 52.8125vw,71rem);height:clamp(23.75rem,16.875rem + 17.1875vw,37.5rem);color:var(--white);font-family:var(--font-family);text-align:center;font-size:clamp(1.5625rem,.78125rem + 1.953125vw,3.125rem)}.about-us-slider{height:clamp(42.875rem,30rem + 32.1875vw,68.625rem);width:100vw}.about-us-slider__slide{height:100%}.about-us-slider__first{width:100%;height:100%;background:url(../images/about-us-slider/1.jpg) no-repeat center/cover;display:flex;align-items:start;justify-content:end}.about-us-slider__first--history{background:url(../images/about-us-slider/2.jpg) no-repeat center/cover}.about-us-slider__first-main{height:100%;width:clamp(24.375rem,11.59375rem + 31.953125vw,49.9375rem);background-color:var(--white);padding:clamp(2.25rem,1.5rem + 1.875vw,3.75rem);font-weight:500}.about-us-slider__first-main--history{background-color:var(--font-color);color:var(--white);height:clamp(36.375rem,24.5625rem + 29.53125vw,60rem)}.about-us-slider__first-text{width:clamp(16.5rem,7.46875rem + 22.578125vw,34.5625rem);font-size:clamp(1.4375rem,.90625rem + 1.328125vw,2.5rem)}.about-us-slider__first-text--history{width:clamp(16.625rem,7rem + 24.0625vw,35.875rem)}.about-us-slider__first-text:not(:last-child),.about-us-slider__second-text:not(:last-child){margin-bottom:.625rem}.about-us-slider__second{width:100%;height:100%;background:url(../images/about-us-slider/1.jpg) no-repeat center/cover;display:flex;align-items:start;justify-content:end}.about-us-slider__second--history{background:url(../images/about-us-slider/3.jpg) no-repeat center/cover}.about-us-slider__second--manufactury{height:clamp(40rem,25.8125rem + 35.46875vw,68.375rem)}.about-us-slider__second-main{height:100%;width:clamp(40rem,22.34375rem + 44.140625vw,75.3125rem);background-color:var(--white);padding:clamp(2.25rem,1.5rem + 1.875vw,3.75rem);font-weight:500}.about-us-slider__second-main-wrapper{width:clamp(16.9375rem,7.5625rem + 23.4375vw,35.6875rem)}.about-us-slider__second-main-title{font-size:clamp(1.4375rem,.90625rem + 1.328125vw,2.5rem);font-weight:900;margin-bottom:.625rem}.about-us-slider__second-main-list{display:flex;flex-direction:column;justify-content:start;align-items:start;list-style-position:inside;padding-left:3.125rem;font-weight:500}.about-us-slider__second-main-text{font-size:clamp(1.4375rem,.90625rem + 1.328125vw,2.5rem)}.about-us-slider__second-main-item{list-style:disc}.about-us-slider__second-main--history{background-color:var(--font-color);color:var(--white);width:clamp(24.375rem,11.59375rem + 31.953125vw,49.9375rem);display:flex;flex-direction:column;justify-content:start;align-items:start;row-gap:.625rem;height:clamp(36.375rem,24.5625rem + 29.53125vw,60rem)}.about-us-slider__second-text{width:clamp(28.5625rem,14.71875rem + 34.609375vw,56.25rem);font-size:clamp(1.4375rem,.90625rem + 1.328125vw,2.5rem);margin-bottom:.625rem}.about-us-slider__second-text--history{width:clamp(16.625rem,7rem + 24.0625vw,35.875rem);display:inline}.about-us-slider .swiper-pagination{position:absolute;left:0;right:0;display:flex;column-gap:2.125rem;justify-content:center;bottom:clamp(1.875rem,-.9375rem + 7.03125vw,7.5rem)!important}.about-us-slider .swiper-pagination--bg-bullet .swiper-pagination-bullet{background-color:#bdbcbc}.about-us-slider .swiper-pagination-bullet{background-color:var(--color-stock);opacity:1;margin:0!important;width:1.5625rem;height:1.5625rem}.about-us-slider .swiper-pagination--bg-bullet .swiper-pagination-bullet-active,.about-us-slider .swiper-pagination-bullet-active{background-color:var(--font-color)}.about-quality,.about-quality__header{display:flex;justify-content:center;align-items:center;flex-direction:column}.about-quality{row-gap:clamp(3.375rem,2.5rem + 2.1875vw,5.125rem);padding-block:clamp(3.75rem,1.78125rem + 4.921875vw,7.6875rem) clamp(3.75rem,.9375rem + 7.03125vw,9.375rem)}.about-quality__header{row-gap:clamp(.625rem,.3125rem + .78125vw,1.25rem)}.about-quality__title{font-family:var(--third-family);text-align:center}.about-quality__title-extra{font-size:clamp(2.1875rem,2.03125rem + .390625vw,2.5rem);color:var(--cows-green);font-family:var(--font-family)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
